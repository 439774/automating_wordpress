---
  - name: Setting up ansible_server
    hosts: localhost
    connection: local
    become: yes
    become_user: ansible
    vars:  #just incase
      token: paste_token_here
      ip_v4_pub: (my_droplet.data.droplet.networks.v4 | selectattr('type', 'equalto', 'private')).0.ip_address | default('<none>', true)
      ip_v4_private: (my_droplet.data.droplet.networks.v4 | selectattr('type', 'equalto', 'private')).0.ip_address | default('<none>', true)
      packages_yum: ["yum"]
      packages: ["vim", "tree", "curl", "wget", "git"]
    tasks:
      - name: Add the user 'ansible' with a bash shell, Generate SSH key for user 'ansible'
        user:
          name: ansible
          shell: /bin/bash
          generate_ssh_key: yes
          ssh_key_file: ~/.ssh/playbook-ssh

      - name: "Read a file content and generate it on terminal"
        shell: "cat ~/.ssh/playbook-ssh.pub"
        register: output
      - debug: var=output.stdout_lines

      - name: "Create ssh key using the output of the script above"
        digital_ocean_sshkey:
          oauth_token: "{{ token }}"
          name: "ansible_user_ssh_pub_key"
          ssh_pub_key: "{{ output.stdout }}"
          state: present
        register: info

      - debug:
          msg: "{{ info.data.ssh_key.id }}"

      - name: Create a new Droplet
        community.digitalocean.digital_ocean_droplet:
          state: present
          project_name: Ansible
          name: webserver
          oauth_token: "{{ token }}"
          ssh_keys: "{{ info.data.ssh_key.id }}"
          project: "Ansible"
          size: s-1vcpu-1gb
          region: nyc1
          image: centos-stream-8-x64
          wait_timeout: 200
        register: my_droplet

      - name: printing 
        ansible.builtin.debug: 
          msg: |
            {{ my_droplet.data.droplet.id }}
            {{ (my_droplet.data.droplet.networks.v4 | selectattr('type', 'equalto', 'public')).0.ip_address | default('<none>', true) }}
            {{ (my_droplet.data.droplet.networks.v4 | selectattr('type', 'equalto', 'private')).0.ip_address | default('<none>', true) }}

      - shell: |
          whoami
          cd
          pwd
          mkdir app && touch app/dev_inventory.yaml
          ls -l
          cat app/dev_inventory.yaml
        register: checkpoint
      
      - name: checking if things are running smoothly
        ansible.builtin.debug: 
          msg: "{{ checkpoint.stdout_lines }}"
